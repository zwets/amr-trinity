# Use miniconda with Python 3.13
FROM docker.io/continuumio/miniconda3:25.3.1-1

# Stop container's bash from leaving .bash_histories everywhere
# and add convenience aliases for interactive (debugging) use
RUN echo "unset HISTFILE" >>/etc/bash.bashrc && \
    echo "alias ls='ls --color=auto' l='ls -CF' la='l -a' ll='l -l' lla='ll -a'" >>/etc/bash.bashrc

# Conda installable
# ----------------------------------------------------------------------

RUN conda install -c conda-forge -c bioconda -c nodefaults --quiet --yes \
        ncbi-amrfinderplus=4.0.23 resfinder=4.7.2 rgi=6.0.5 jq=1.8.1 && \
    conda clean -qafy

# Ubuntu dependencies
# ----------------------------------------------------------------------

# AFP fails to index its database without libmpi40
RUN apt-get -qq update && apt-get -qq install libopenmpi-dev

# Install databases in the container
# ----------------------------------------------------------------------

WORKDIR /databases

RUN mkdir -p /databases/amrfinderplus && \
    amrfinder_update -d /databases/amrfinderplus && \
    ln -srfT `realpath /databases/amrfinderplus/latest` /databases/amrfinderplus/latest && \
    \
    git clone --depth=1 -b master https://bitbucket.org/genomicepidemiology/resfinder_db.git && \
    git clone --depth=1 -b master https://bitbucket.org/genomicepidemiology/pointfinder_db.git && \
    git clone --depth=1 -b master https://bitbucket.org/genomicepidemiology/disinfinder_db.git && \
    grep -Ev '^[[:space:]]*(#|$)' resfinder_db/config   | cut -f1 | xargs -I@ kma_index -i resfinder_db/@.fsa -o resfinder_db/@ && \
    grep -Ev '^[[:space:]]*(#|$)' pointfinder_db/config | cut -f1 | xargs -I@ sh -c 'kma_index -i pointfinder_db/@/*.fsa -o pointfinder_db/@/@' && \
    grep -Ev '^[[:space:]]*(#|$)' disinfinder_db/config | cut -f1 | xargs -I@ kma_index -i disinfinder_db/@.fsa -o disinfinder_db/@ && \
    \
    mkdir -p /databases/rgi && cd /databases/rgi && \
    wget -cqO card.tar.bz2 'https://card.mcmaster.ca/latest/data' && \
    tar -xf card.tar.bz2 && \
    rm -f card.tar.bz2

# Install wrapper scripts that already sets database option
# ----------------------------------------------------------------------

RUN printf '#!/bin/sh\namrfinder -d /databases/amrfinderplus/latest "$@"' \
    >/usr/local/bin/amrfinderplus && \
    chmod +x /usr/local/bin/amrfinderplus && \
    \
    printf '#!/bin/sh\nrun_resfinder.py --acquired --point --disinfectant --ignore_missing_species -db_res /databases/resfinder_db -db_point /databases/pointfinder_db -db_disinf /databases/disinfinder_db "$@"' \
    >/usr/local/bin/resfinder && \
    chmod +x /usr/local/bin/resfinder && \
    \
    printf '#!/bin/sh\nrgi load -i /databases/rgi/card.json --local && rgi main --local --clean "$@"\n' \
    >/usr/local/bin/run-rgi && \
    chmod +x /usr/local/bin/run-rgi

# Set up workdir and default command
#----------------------------------------------------------------------

# Change to the mounted workdir as initial PWD
WORKDIR /workdir

# No ENTRYPOINT means that any binary on the PATH in the container can
# be run.  Set CMD so that without arguments, user gets invocation help
CMD ["printf", "Usage: run-rgi --input_sequence FASTA --output_file FILE [--num_threads N]\n       resfinder -ifa FASTA -s SPECIES -o DIR [-j JSON] [--kma_threads N]\n       amrfinderplus -n FASTA -O SPECIES -o FILE [--threads N]\n"]

